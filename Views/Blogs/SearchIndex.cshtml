@using BlogMVC.Models
@using BlogMVC.Helpers
@using BlogMVC.Services
@inject ImageService imageService
@model PaginatedList<Blog>

@{
    ViewData["Title"] = "The Blog: Home";
}

<div class="container-fluid p-0">
    <div class="blog-img-header-img pt-5">
        <h1 class="text-center text-light display-4">Writing is the art of breathing life<br /> into the silent whispers of imagination</h1>
        <!--Search bar-->
        <div class="d-flex justify-content-center align-items-center pt-2">
            <form class="d-flex justify-content-center my-2 my-lg-0" asp-action="SearchIndex" method="Post">
                <input name="searchInput" class="form-control mr-sm-2 square-end" type="search" placeholder="Search" aria-label="Search" style="width: 18rem;" required>
                <button class="btn btn-outline-light my-2 my-sm-0 btn-square-start border-start-0" type="submit">Search</button>
            </form>
        </div>
    </div>
</div>

<div class="container">
    <a class="btn btn-outline-dark btn-sm mt-2" asp-action="create">Create blog</a>

    <!-- blog cards-->
    <div class="row pt-4">
        <div class="col-12 d-flex justify-content-center flex-wrap">
            @{
                foreach (var blog in Model)
                {
                    <div class="card me-2 mt-2" style="width: 18rem;">
                        <img src="@imageService.DecodeImage(blog.ImageData, blog.ContentType)" class="card-img-top" alt="...">
                        <div class="card-body">
                            <h5 class="card-title">@blog.Name</h5>
                            <p class="card-text">@blog.Description</p>
                            <a asp-action="Details"
                               asp-route-id="@blog.Id"
                               class="btn btn-secondary-color">See posts</a>
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    <!--blog next/previous links--></
    <div class="row mt-2">
        <div class="col">
            @{
                var previousDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item">
                        <a asp-action="SearchIndex" aria-label="Previous"
                           asp-route-pageIndex="@(Model.PageIndex - 1)"
                           asp-route-searchInput="@ViewBag.searchInput"
                           class="page-link @previousDisabled">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a asp-action="SearchIndex" aria-label="Next"
                           asp-route-pageIndex="@(Model.PageIndex + 1)"
                           asp-route-searchInput="@ViewBag.searchInput"
                           class="page-link @nextDisabled">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>






